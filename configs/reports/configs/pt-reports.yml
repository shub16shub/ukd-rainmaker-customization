---
ReportDefinitions:
- reportName: ReceiptRegister
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.tenantid 
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyid 
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: reports.pt.receiptnumber 
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptdate
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: reports.pt.paymentmode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.transactionnumber 
    type: string
    source: pt
    total: false
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true  
  - name: swatchathatax
    label: reports.pt.swatchatatax
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertytax 
    type: string
    source: pt
    total: true
  - name: totalcollection
    label: reports.pt.totalcollection 
    type: string
    source: pt
    total: true
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: mohallaname
    label: reports.pt.mohallaname
    type: string
    source: pt
    total: false
  - name: doorno
    label: reports.pt.doorno
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CASH:CASH,Online:Online,CARD:CARD,DD:DD,CHEQUE:CHEQUE'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentMode
  - name: collectorname
    label: reports.pt.collectorname
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PTCEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND eg_user.id = $collectorname::INTEGER
  query: |
    select initcap(split_part(pay.tenantid, '.', 2)) as tenantid,
    bill.consumercode as propertyid,
    pd.receiptnumber  as receiptnumber,
    To_char(To_timestamp(pd.receiptdate/1000 ), 'DD/MM/YYYY')  AS receiptdate,
    pay.paymentmode as paymentmode,
    pay.transactionnumber as transactionnumber,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN bad.amount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' or taxheadcode LIKE 'PT_LATE_ASSESSMENT_PENALTY' THEN bad.amount ELSE 0 END) as penalty,
    SUM(CASE WHEN taxheadcode LIKE 'SWATCHATHA_TAX%' THEN bad.amount ELSE 0 END) as swatchathatax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX%' or taxheadcode like 'PT_TIME_REBATE' or taxheadcode like 'PT_PROMOTIONAL_REBATE' THEN bad.amount ELSE 0 END) as propertytax,
    (SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN bad.amount ELSE 0 END)  + SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' or taxheadcode LIKE 'PT_LATE_ASSESSMENT_PENALTY' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'SWATCHATHA_TAX' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' or taxheadcode like 'PT_TIME_REBATE' or taxheadcode like 'PT_PROMOTIONAL_REBATE' THEN bad.amount ELSE 0 END) ) as totalcollection,
    un.name as collectorname,
    msg.message as mohallaname,
    addr.doorno as doorno,
    eu.name as ownername
    from egcl_payment pay,
    egcl_paymentdetail pd,
    egcl_bill bill,
    egcl_billdetial bd,
    egcl_billaccountdetail bad,
    eg_user un,
    eg_pt_address_v2 addr,
    eg_user eu,
    message msg
    where pd.paymentid= pay.id and
    pd.billid=bill.id and
    bd.billid=bill.id and
    bad.billdetailid=bd.id and
    pay.createdby=CAST(un.id as varchar) and
    addr.property=bill.consumercode and
    RIGHT(msg.code,5)=addr.locality and
    msg.tenantid=pay.tenantid and
    eu.uuid=(select poo.userid from eg_pt_owner_v2 poo where poo.propertydetail=(select pdd.assessmentnumber from eg_pt_propertydetail_v2 pdd where pdd.property= bill.consumercode fetch first 1 row only) fetch first 1 row only) and
    msg.locale='hi_IN' and
    un.name LIKE $collectorname and
    pay.tenantid LIKE $tenantid and 
    pd.businessservice='PT'and 
    pay.paymentstatus != 'CANCELLED' AND pay.tenantid != 'uk.testing'
  groupby: GROUP BY pay.tenantid,pd.receiptnumber,bill.consumercode,pd.receiptdate,pay.transactionnumber,pay.paymentmode,un.name,msg.message,addr.doorno,eu.name

- reportName: CancelledReceiptRegister
  summary: Receipt Register for cancelled Receipts
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.tenantid 
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyid 
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: reports.pt.receiptnumber 
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptdate
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: reports.pt.paymentmode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.transactionnumber 
    type: string
    source: pt
    total: false
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: false
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: false  
  - name: swatchathatax
    label: reports.pt.swatchatatax 
    type: string
    source: pt
    total: false
  - name: propertytax
    label: reports.pt.propertytax 
    type: string
    source: pt
    total: false
  - name: totalcollection
    label: reports.pt.totalcollection 
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CASH:CASH,Online:Online,CARD:CARD,DD:DD,CHEQUE:CHEQUE'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentMode
  query: |
    select initcap(split_part(pay.tenantid, '.', 2)) as tenantid,
    bill.consumercode as propertyid,
    pd.receiptnumber  as receiptnumber,
    To_char(To_timestamp(pd.receiptdate/1000 ), 'DD/MM/YYYY')  AS receiptdate,
    pay.paymentmode as paymentmode,
    pay.transactionnumber as transactionnumber,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN bad.amount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' THEN bad.amount ELSE 0 END) as penalty,
    SUM(CASE WHEN taxheadcode LIKE 'SWATCHATHA_TAX%' THEN bad.amount ELSE 0 END) as swatchathatax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TAX%' THEN bad.amount ELSE 0 END) as propertytax,
    (SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN bad.amount ELSE 0 END)  + SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'SWATCHATHA_TAX' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_TAX' THEN bad.amount ELSE 0 END) ) as totalcollection
    from egcl_payment pay,
    egcl_paymentdetail pd,
    egcl_bill bill,
    egcl_billdetial bd,
    egcl_billaccountdetail bad
    where pd.paymentid= pay.id and
    pd.billid=bill.id and
    bd.billid=bill.id and
    bad.billdetailid=bd.id and
    pay.tenantid LIKE $tenantid and 
    pd.businessservice='PT'and 
    pay.paymentstatus = 'CANCELLED' AND pay.tenantid != 'uk.testing'
  groupby: GROUP BY pay.tenantid,pd.receiptnumber,bill.consumercode,pd.receiptdate,pay.transactionnumber,pay.paymentmode

- reportName: OldUlbWisePtCollection
  summary: ULB-wise PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: reports.pt.totalamountdue
    type: string
    source: pt
    total: true
  searchParams:
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND usagecategorymajor = $usage
  query: |
    SELECT 
      tenantid, 
      COUNT(*) AS totalassessments, 
      SUM(totalamount) AS totalamount, 
      SUM(amount) AS totalamountpaid, 
      (SUM(totalamount) - SUM(amount)) AS totalamountdue 
    FROM eg_pt_propertydetail_v2 AS pd 
    LEFT OUTER JOIN 
      (SELECT consumercode, totalamount, amount FROM egcl_receiptheader AS rh 
      LEFT OUTER JOIN egcl_receiptinstrument AS ri ON rh.id = ri.receiptheader 
      LEFT OUTER JOIN egcl_instrumentheader AS ih ON ri.instrumentheader = ih.id 
      and ih.instrumentstatus	 != 'CANCELLED' 
      where rh.status != 'Cancelled'
      ) AS instrument_data ON CONCAT(pd.property, ':', pd.assessmentnumber) = instrument_data.consumercode 
    WHERE tenantid = $tenantid AND tenantid != 'uk.testing'
  groupby: GROUP BY tenantid
  orderby: ORDER BY tenantid, totalamountpaid DESC NULLS LAST

- reportName: StateCancelledReceiptRegister
  summary: Receipt Register for cancelled Receipts State
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.ulbName
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: reports.pt.receiptNo
    type: string
    source: pt
    total: false
  - name: status
    label: reports.pt.status
    type: string
    source: pt
    total: false
  - name: transactiondate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: g8issuedate
    label: reports.pt.g8issuedate
    type: string
    source: pt
    total: false
  - name: g8receiptno
    label: reports.pt.g8receiptno
    type: string
    source: pt
    total: false
  - name: amount
    label: reports.pt.amount
    type: string
    source: pt
    total: true
  - name: propertytax
    label: reports.pt.propertyTax
    type: string
    source: pt
    total: true
  - name: firecess
    label: reports.pt.fireCess
    type: string
    source: pt
    total: true
  - name: cancercess
    label: reports.pt.cancerCess
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: adhocrebate
    label: reports.pt.adhocrebate
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: adhocpenalty
    label: reports.pt.adhocpenalty
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: exemption
    label: reports.pt.exemption
    type: string
    source: pt
    total: true
  - name: adjusment
    label: reports.pt.roundoff
    type: string
    source: pt
    total: true
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: usagetype
    label: reports.pt.usagetype
    type: string
    source: pt
    total: false
  - name: assessmentnumber
    label: reports.pt.assessmentNo
    type: string
    source: pt
    total: false
  - name: financialyear
    label: reports.pt.financialYear
    type: string
    source: pt
    total: false
  - name: instrumenttype
    label: reports.pt.paymentMode
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: reports.pt.ddChequeTransactionNo
    type: string
    source: pt
    total: false
  - name: bankname
    label: reports.pt.bankName
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CASH:CASH,Online:Online,CARD:CARD,DD:DD,CHEQUE:CHEQUE'
    source: pt
    isMandatory: false
    searchClause: AND instrumenttype = $paymentMode
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      WITH receipt_breakup AS (
                  SELECT 
                    receiptheader, 
                    SUM(CASE WHEN description LIKE 'PT_ADHOC_PENALTY%' THEN cramount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN description LIKE 'PT_ADHOC_PENALTY%' THEN -dramount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN description LIKE 'PT_FIRE_CESS%' THEN cramount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN description LIKE 'PT_FIRE_CESS%' THEN cramount ELSE 0 END) as firecess, 
                    SUM(CASE WHEN description LIKE 'PT_CANCER_CESS%' THEN cramount ELSE 0 END) as cancercess, SUM(CASE WHEN description LIKE 'PT_TIME_INTEREST%' THEN cramount ELSE 0 END) as interest, SUM(CASE WHEN description LIKE 'PT_TIME_PENALTY%' THEN cramount ELSE 0 END) as penalty, 
                    SUM(CASE WHEN description LIKE 'PT_TIME_REBATE%' THEN -dramount ELSE 0 END) as rebate, 
                    (SUM(CASE WHEN description LIKE 'PT_TAX%' THEN cramount ELSE 0 END) 
                    + SUM(CASE WHEN description LIKE 'PT_DECIMAL_CEILING_DEBIT%' THEN dramount ELSE 0 END)) 
                    as propertytax, 
                    SUM(CASE WHEN description LIKE 'PT_UNIT_USAGE_EXEMPTION%' THEN -dramount ELSE 0 END) as exemption, 
                    (SUM(CASE WHEN description LIKE 'PT_DECIMAL_CEILING_CREDIT%' THEN cramount ELSE 0 END)
                    - SUM(CASE WHEN description LIKE 'PT_DECIMAL_CEILING_DEBIT%' THEN dramount ELSE 0 END))  as adjusment
                  FROM egcl_receiptdetails
                  WHERE tenantid != 'uk.testing'
                  GROUP BY receiptheader
      )
      SELECT 
        initcap(split_part(rh.tenantid, '.', 2)) as tenantid,
        rh.id, 
        Substring(rh.consumercode, '(.*):') AS propertyid, 
        Substring(rh.consumercode, ':(.*)') AS assessmentnumber, 
        rh.status,
        rh.consumercode, 
        rh.receiptdate, 
        To_char(To_timestamp(rh.receiptdate / 1000), 'DD/MM/YYYY') AS transactiondate, 
        bankid AS bankname, 
        receiptnumber, 
        amount, 
        instrumenttype, 
        transactionnumber, 
        receipt_breakup.*, 
        pt_detail.financialyear,
        To_char(To_timestamp(rh.manualreceiptdate / 1000), 'DD/MM/YYYY') AS g8issuedate,
        Initcap(COALESCE(pt_detail.usagecategoryminor, pt_detail.usagecategorymajor)) as usagetype,
        manualreceiptnumber as g8receiptno
      FROM egcl_receiptheader AS rh
      JOIN egcl_receiptinstrument AS ri ON rh.id = ri.receiptheader
      JOIN egcl_instrumentheader AS ih ON ih.id = ri.instrumentheader
      JOIN receipt_breakup ON rh.id = receipt_breakup.receiptheader
      JOIN eg_pt_propertydetail_v2 pt_detail ON CONCAT(pt_detail.property, ':', pt_detail.assessmentnumber) = rh.consumercode
      JOIN eg_pt_address_v2 pt_addr ON pt_detail.property = pt_addr.property
      WHERE rh.tenantid != 'uk.testing' and rh.status = 'Cancelled'
  orderby: ORDER BY rh.receiptdate DESC

- reportName: StateWidePtCollection
  summary: State Wide PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.ulbName
    type: string
    source: pt
    total: false
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: true
  - name: totaloffline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: totalonline
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: reports.pt.totalamountdue
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate <= $toDate
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND tenantid = $ulb
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND usagecategorymajor = $usage
  query: |
      SELECT 
      initcap(split_part(tenantid, '.', 2)) as tenantid, 
      COUNT(*) AS totalassessments, 
      SUM(totalamount) AS totalamount, 
      SUM(amount) AS totalamountpaid, 
      SUM(CASE WHEN collectiontype LIKE 'ONLINE' THEN amount ELSE 0 END) AS totalonline, 
      SUM(CASE WHEN collectiontype LIKE 'COUNTER' THEN amount ELSE 0 END) AS totaloffline, 
      (SUM(totalamount) - SUM(amount)) AS totalamountdue 
      FROM eg_pt_propertydetail_v2 AS pd 
      LEFT OUTER JOIN (SELECT consumercode, totalamount, amount, collectiontype, receiptdate FROM egcl_receiptheader AS rh 
      LEFT OUTER JOIN egcl_receiptinstrument AS ri ON rh.id = ri.receiptheader 
      LEFT OUTER JOIN egcl_instrumentheader AS ih ON ri.instrumentheader = ih.id and ih.instrumentstatus	 != 'CANCELLED' 
      where rh.status != 'Cancelled'
      ) AS tbl_amounts ON CONCAT(pd.property, ':', pd.assessmentnumber) = tbl_amounts.consumercode 
      WHERE tenantid LIKE CONCAT(SPLIT_PART($tenantid, '.', 1), '%') and tenantid != 'uk.testing'
  groupby: GROUP BY tenantid
  orderby: ORDER BY tenantid, totalamountpaid DESC NULLS LAST

- reportName: UlbWisePtCollection
  summary: State Wide PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: reports.pt.totalamountpaid
    type: string
    source: pt
    total: true
  - name: totaloffline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: totalonline
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: reports.pt.totalamountdue
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate <= $toDate
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND usagecategorymajor = $usage
  query: |
      SELECT 
      initcap(split_part(tenantid, '.', 2)) as tenantid, 
      COUNT(*) AS totalassessments, 
      SUM(totalamount) AS totalamount, 
      SUM(amount) AS totalamountpaid, 
      SUM(CASE WHEN collectiontype LIKE 'ONLINE' THEN amount ELSE 0 END) AS totalonline, 
      SUM(CASE WHEN collectiontype LIKE 'COUNTER' THEN amount ELSE 0 END) AS totaloffline, 
      (SUM(totalamount) - SUM(amount)) AS totalamountdue 
      FROM eg_pt_propertydetail_v2 AS pd 
      LEFT OUTER JOIN (SELECT consumercode, totalamount, amount, collectiontype, receiptdate FROM egcl_receiptheader_v1 AS rh 
      LEFT OUTER JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader 
      LEFT OUTER JOIN egcl_instrumentheader_v1 AS ih ON ri.instrumentheader = ih.id and ih.instrumentstatus	 != 'CANCELLED' 
      where rh.status != 'Cancelled'
      ) AS tbl_amounts ON pd.property = tbl_amounts.consumercode 
      WHERE tenantid LIKE CONCAT(SPLIT_PART($tenantid, '.', 1), '%') and tenantid = $tenantid and tenantid != 'uk.testing'
  groupby: GROUP BY tenantid
  orderby: ORDER BY tenantid, totalamountpaid DESC NULLS LAST


- reportName: ULBPTDataDumpReport
  summary: ULB level report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: ulb
    label: reports.pt.ulb
    type: string
    source: pt
    total: false
  - name: propertytaxuniqueid
    label: reports.pt.propertytaxuniqueid
    type: string
    source: pt
    total: false  
  - name: transcationdate
    label: reports.pt.transcationdate
    type: string
    source: pt
    total: false  
  - name: receiptnumber
    label: reports.pt.receiptnumber
    type: string
    source: pt
    total: false  
  - name: existingpropertyid
    label: reports.pt.existingpropertyid
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false  
  - name: guardianname
    label: reports.pt.guardianname
    type: string
    source: pt
    total: false
  - name: totalarea
    label: reports.pt.totalarea
    type: string
    source: pt
    total: false  
  - name: builtarea
    label: reports.pt.builtarea
    type: string
    source: pt
    total: false
  - name: floors
    label: reports.pt.floors
    type: string
    source: pt
    total: false  
  - name: occupancy
    label: reports.pt.occupancy
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.propertytype
    type: string
    source: pt
    total: false  
  - name: mobileno
    label: reports.pt.mobileno
    type: string
    source: pt
    total: false  
  - name: transcationmode
    label: reports.pt.transcationmode
    type: string
    source: pt
    total: false 
  - name: paymentamount
    label: reports.pt.paymentamount
    type: string
    source: pt
    total: true 
  - name: paymentdate
    label: reports.pt.paymentdate
    type: string
    source: pt
    total: false 
  - name: emailid
    label: reports.pt.emailid
    type: string
    source: pt
    total: false 
  - name: address
    label: reports.pt.address
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND rh.receiptdate <= $toDate
  query: |
    --S.no    Service Name	ULB    Property Tax Unique ID    Date Of Transcation    Receipt Number	Existing Property ID    Owner Name    Guardian Name    Total Area (SQ.YARD)    Covered  Area/Built Area (SQ.FEET)    Floors    Occupancy (Rented,Self /Unoccupied)    Type Of Property	Mobile Number    Transcation Mode of Payment    Payment Amount    Payment Date    Email Id	Address
    with eg_pt_unit_v2_ot as (
      select 
        propertydetail, 
        string_agg(distinct pu.occupancytype, ',') as occupancytype, 
        string_agg(distinct coalesce(usagecategoryminor, usagecategorymajor), ',') as propertytype 
      from eg_pt_unit_v2 as pu
      where  pu.tenantid = $tenantid AND pu.tenantid != 'uk.testing'
      group by propertydetail
    )
    select 
      distinct on (rh.receiptnumber)
      initcap(split_part(rh.tenantid, '.', 2)) as "ulb",
      split_part(consumercode, ':', 1) as "propertytaxuniqueid",
      to_timestamp(receiptdate/1000) at time zone 'Asia/Kolkata' as "transcationdate",
      receiptnumber    as "receiptnumber",
      pt.oldpropertyid as "existingpropertyid",
      eu."name" as "ownername", 
      eu.guardian     as "guardianname",
      pd.landarea     as "totalarea",
      pd.builduparea     * 9 as "builtarea",    
      pd.nooffloors     as "floors",
      pot.occupancytype as "occupancy",
      pot.propertytype     as "propertytype",
      eu.mobilenumber as "mobileno",
      instrumenttype as "transcationmode",
      ih.amount as "paymentamount",
      to_timestamp(ih.transactiondate/1000) at time zone 'Asia/Kolkata' as "paymentdate",
      eu.emailid     as "emailid"    ,
      REGEXP_REPLACE(REGEXP_REPLACE(CONCAT(pta.doorno, ',', pta.addressline1, ',', pta.addressline2, ',', pta.buildingname, ',', pta.pincode), ',+', ','), '^,|,$', '') as "address"
    from egcl_receiptheader as rh
    inner join egcl_receiptinstrument as ri on ri.receiptheader = rh.id    inner join egcl_instrumentheader     as ih on ih.id = ri.instrumentheader
    inner join eg_pt_property_v2    as pt on pt.propertyid = split_part(consumercode, ':', 1)
    inner join eg_pt_propertydetail_v2    as pd on pd.assessmentnumber = split_part(consumercode, ':', 2)
    inner join eg_pt_owner_v2     as po on po.propertydetail = pd.assessmentnumber
    inner join eg_user as eu on eu.uuid     = po.userid
    inner join eg_pt_address_v2    as pta on pta.property = pt.propertyid
    inner join eg_pt_unit_v2_ot as pot on pot.propertydetail = pd.assessmentnumber
    where rh.tenantid = $tenantid AND rh.tenantid != 'uk.testing'
    
- reportName: DemandRegisterReport
  summary: Reports for Reconcillation of data in PT
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyid
    label: reports.pt.PropertyId
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: reports.pt.oldPropertyId
    type: string
    source: pt
    total: false
  - name: doorno
    label: reports.pt.DoorNo
    type: string
    source: pt
    total: false
  - name: mohalla
    label: reports.pt.Mohallaname
    type: string
    source: pt
    total: false
  - name: propertytype
    label: reports.pt.PropertyType
    type: string
    source: pt
    total: false
  - name: usage
    label: reports.pt.usage
    type: string
    source: pt
    total: false
  - name: ownernamemobile
    label: reports.pt.Owners
    type: string
    total: false
    source: pt
  - name: currentarv
    label: reports.pt.currentarv
    type: string
    source: pt
    total: true    
  - name: currenttax
    label: reports.pt.CurrentTax
    type: string
    source: pt
    total: true
  - name: arreartax
    label: reports.pt.arreartax
    type: string
    source: pt
    total: true
  - name: penaltytax
    label: reports.pt.penaltytax
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: totaltax
    label: reports.pt.totaltax
    type: string
    source: pt
    total: true
  - name: currentcollected
    label: reports.pt.currentcollected
    type: string
    source: pt
    total: true
  - name: arrearcollected
    label: reports.pt.arrearcollected
    type: string
    source: pt
    total: true
  - name: penaltycollected
    label: reports.pt.penaltycollected
    type: string
    source: pt
    total: true
  - name: totalcollected
    label: reports.pt.totalcollected
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND dcb.createddate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND dcb.createddate <= $toDate
  - name: Mohallaname
    label: MohallaName
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantid|$.TenantBoundary[*].boundary[*].name|$.TenantBoundary[*].boundary[*].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND mohalla = $Mohallaname
  query: | 
    select * from dcb where tenantid = $tenantid                                
    
- reportName: PTCollectionCount
  reporptabel: report.state.level.pt.collection
  summary: Shows the total properties and collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantId
    label: reports.pt.tenantid
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: reports.pt.paymentmode
    type: string
    source: pt
    total: false
  - name: sum
    label: reports.pt.total
    type: string
    source: pt
    total: true
  - name: count
    label: reports.pt.count
    type: string
    source: pt
    total: true    
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND p.lastmodifiedtime >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND p.lastmodifiedtime <= $toDate
  - name: ulb
    label: reports.pt.tenantid
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND p.tenantId = $ulb
  query: |
    select initcap(split_part(p.tenantId, '.', 2)) as tenantId, p.paymentmode ,sum(p.totalamountpaid), count(p.id)
    FROM egcl_payment p, egcl_paymentdetail pd 
    WHERE p.id=pd.paymentid  and pd.businessservice ='PT'
  groupby: GROUP BY p.tenantid, p.paymentmode
  orderby: ORDER BY p.tenantId asc

- reportName: PTAdoptionReport
  summary: Number of applications
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantId
    label: reports.pt.tenantid
    type: string
    source: pt
    total: false
  - name: totalpropertycount
    label: reports.pt.totalpropertycount
    type: string
    source: pt
    total: true
  - name: dataentry
    label: reports.pt.dataentry
    type: string
    source: pt
    total: true
  - name: propertiestobeupdated
    label: reports.pt.propertiestobeupdated
    type: string
    source: pt
    total: true
  - name: propertiesverified
    label: reports.pt.propertiesverified
    type: string
    source: pt
    total: true
  - name: verificationpercentage
    label: reports.pt.verificationpercentage
    type: string
    source: pt
    total: true
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND pt.tenantid = $ulb
  query: |
      SELECT 
      a.tenant as tenantId, 
      a.total_properties totalpropertycount,
      (d.total_properties_dataentry) dataentry,
      (case when b.total_properties_to_be_update > 0 then b.total_properties_to_be_update else 0 end) propertiestobeupdated,
      (case when c.total_properties_updated > 0 then c.total_properties_updated else 0 end) propertiesverified, 
      (case when Round(( c.total_properties_updated * 100 / total_properties_to_be_update ), 2) > 0 then Round(( 
      c.total_properties_updated * 100 / total_properties_to_be_update ), 2) else 0 end) verificationpercentage, 
      e.totaldemand totaldemand, 
      e.totalrevenuecollected totalrevenuecollected 
      FROM (SELECT Initcap(Split_part(pd.tenantid, '.', 2)) tenant,Count(DISTINCT pd.property) AS Total_properties 
      FROM eg_pt_propertydetail_v2 pd WHERE pd.tenantid != 'uk.testing' GROUP BY pd.tenantid) AS a LEFT OUTER JOIN (SELECT Initcap(Split_part(pd1.tenantid, '.', 2)) tenant, Count(DISTINCT pd1.property) Total_properties_to_be_update 
      FROM eg_pt_propertydetail_v2 pd1 WHERE pd1.tenantid != 'uk.testing' AND pd1.additionaldetails ->> 'isMigrated' = 'true' 
      GROUP BY pd1.tenantid) AS b ON a.tenant = b.tenant 
      LEFT OUTER JOIN (SELECT Initcap(Split_part(tenantid, '.', 2)) tenant, Count(DISTINCT propertyid) Total_properties_updated FROM 
      eg_pt_property_v2 WHERE additionaldetails ->> 'updatedByULB' = 'true' GROUP BY tenantid) AS c ON b.tenant = c.tenant 
      LEFT OUTER JOIN (SELECT Initcap(Split_part(pd1.tenantid, '.' , 2)) tenant, Count(DISTINCT pd1.property) 
      Total_properties_DataEntry FROM eg_pt_propertydetail_v2 pd1 WHERE pd1.tenantid != 'uk.testing' AND ( pd1.additionaldetails ->> 
      'isMigrated' != 'true' OR pd1.additionaldetails ->> 'isMigrated' IS NULL ) GROUP BY pd1.tenantid) AS d ON d.tenant = a.tenant 
      LEFT OUTER JOIN (SELECT Initcap(Split_part(pd1.tenantid, '.', 2)) tenant, Sum(dd.taxamount) AS totaldemand , Sum(dd.collectionamount)
      AS totalrevenuecollected FROM eg_pt_propertydetail_v2 pd1 JOIN (SELECT DISTINCT ON (consumercode) * FROM egbs_demand_v1 dd ORDER 
      BY consumercode, lastmodifiedtime DESC) AS d ON d.consumercode = pd1.property JOIN egbs_demanddetail_v1 dd ON dd.demandid = d.id 
      WHERE pd1.tenantid != 'uk.testing' GROUP BY pd1.tenantid) AS e ON e.tenant = a.tenant 
  orderby: ORDER BY a.tenant

- reportName: StateWiseAdoptionReport
  summary: Reports for State Wise Adoption Report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.tenantid
    type: string
    source: pt
    total: false       
  - name: propertiestobeupdated
    label: reports.pt.propertiestobeupdated
    type: string
    source: pt
    total: true
  - name: propertiesverified
    label: reports.pt.propertiesverified
    type: string
    source: pt
    total: true
  - name: verificationpercentage
    label: reports.pt.verificationpercentage
    type: string
    source: pt
    total: true
  searchParams:
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND c.tenantid = $ulb
  query: | 
    select initcap(split_part(a.tenantid, '.', 2)) as tenantid, 
    (b.Total_properties_to_be_update) propertiestobeupdated,
    (c.Total_properties_updated) propertiesverified,
    round((c.Total_properties_updated*100/Total_properties_to_be_update),2) verificationpercentage 
    from(select pd.tenantid,
    count(distinct pd.property) as Total_properties  from eg_pt_propertydetail_v2 pd where pd.tenantid != 'uk.testing' group by pd.tenantid) as a,
    (select pd1.tenantid,
    count( distinct pd1.property) Total_properties_to_be_update from eg_pt_propertydetail_v2 pd1 where pd1.tenantid != 'uk.testing' 
    and pd1.additionaldetails ->>'isMigrated' = 'true' group by pd1.tenantid) as b,
    (select d.tenantid,count(distinct d.consumercode) Total_properties_updated from egbs_demand_v1 d,egbs_demanddetail_v1 dd,eg_pt_property_v2 
    pt,eg_pt_propertydetail_v2 pd where pd.property=pt.propertyid and pd.ctid in(select max(ctid) from eg_pt_propertydetail_v2  group 
    by financialyear,property having property=pd.property) and d.id=dd.demandid and dd.taxamount<>0 and pd.property=d.consumercode 
    and taxheadcode like 'PT_TAX%' and pd.property in (select  distinct pd.property from egbs_demand_v1 d,egbs_demanddetail_v1 
    dd,eg_pt_property_v2 pt,eg_pt_propertydetail_v2 pd where pd.property=pt.propertyid and pd.additionaldetails ->>'isMigrated' = 
    'true' and pd.ctid in(select max(ctid) from eg_pt_propertydetail_v2  group by financialyear,property having property=pd.property) 
    and d.id=dd.demandid and dd.taxamount<>0 and pd.property=d.consumercode and taxheadcode like 'PT_TAX%' and 
    pd.financialyear=to_char(to_timestamp(d.taxperiodfrom/1000),'YYYY')||'-'||to_char(to_timestamp(d.taxperiodto/1000),'YY') and 
    pd.financialyear='2020-21') group by d.tenantid) as c
    where a.tenantid=b.tenantid 
    and b.tenantid=c.tenantid               
  orderby: ORDER BY a.tenantid  


- reportName: StateWiseDCBReport
  summary: Reports for State Wise DCB Report
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.tenantid
    type: string
    source: pt
    total: false       
  - name: currenttax
    label: reports.pt.CurrentTax
    type: string
    source: pt
    total: true
  - name: arreartax
    label: reports.pt.arreartax
    type: string
    source: pt
    total: true
  - name: penaltytax
    label: reports.pt.penaltytax
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: totaltax
    label: reports.pt.totaltax
    type: string
    source: pt
    total: true
  - name: currenttaxcollection
    label: reports.pt.currenttaxcollection
    type: string
    source: pt
    total: true
  - name: arreartaxcollection
    label: reports.pt.arreartaxcollection
    type: string
    source: pt
    total: true
  - name: totalpenaltycollection
    label: reports.pt.totalpenaltycollection
    type: string
    source: pt
    total: true
  - name: totaltaxcollection
    label: reports.pt.totaltaxcollection
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND dcb.createddate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND dcb.createddate <= $toDate    
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND tenantid = $ulb
  query: | 
    select initcap(split_part(tenantid, '.', 2)) tenantid, 
    sum(currenttax)  currenttax, 
    sum(arreartax) as arreartax, 
    sum(penaltytax) as penaltytax, 
    sum(rebate) as rebate, 
    sum(totaltax)  totaltax, 
    sum(currentcollected) currenttaxcollection, 
    sum(arrearcollected) arreartaxcollection, 
    Sum(penaltycollected) totalpenaltycollection, 
    sum(totalcollected) totaltaxcollection 
    from dcb where tenantid != 'uk.testing' 
  groupby: GROUP BY tenantid                
  orderby: ORDER BY tenantid  
